{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/R/Decimal-to-binary.R","content":"# Program to convert decimal number into binary number using recursive function\nconvert_to_binary <- function(n) {\n  if(n > 1) {\n    convert_to_binary(as.integer(n/2))\n  }\n  cat(n %% 2)\n}\n\nconvert_to_binary(52)"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/R/Factorial.R","content":"# take input from the user\nfactorial <- function(n) {\nfactorial = 1\n# check is the number is negative, positive or zero\nif(num < 0) {\n  print("Sorry, factorial does not exist for negative numbers")\n} else if(num == 0) {\n  print("The factorial of 0 is 1")\n} else {\n  for(i in 1:num) {\n    factorial = factorial * i\n  }\n  print(paste("The factorial of", num ,"is",factorial))\n}\n}\n\nfactorial(4)"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/R/First-10-Fibonacci.R","content":"fibonacci <- function(n) {\nFibonacci <- numeric(n)\nFibonacci[1] <- Fibonacci[2] <- 1\nfor (i in 3:10) Fibonacci[i] <- Fibonacci[i - 2] + Fibonacci[i - 1]\nprint("First 10 Fibonacci numbers:")\nprint(Fibonacci)\n}\n\nfibonacci(10)"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/R/Max-Min-of-Vector.R","content":"max_min_vector <- function() {\nnums = c(10, 20, 30, 40, 50, 60)\nprint('Original vector:')\nprint(nums)   \nprint(paste("Maximum value of the said vector:",max(nums)))\nprint(paste("Minimum value of the said vector:",min(nums)))\n}\n\nmax_min_vector()"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/R/Odd-or-Even.R","content":"# Program to check if the input number is odd or even.\n# A number is even if division by 2 give a remainder of 0.\n# If remainder is 1, it is odd.\nodd_or_even <- function(n){\nnum = n\nif((num %% 2) == 0) {\n  print(paste(num,"is Even"))\n} else {\n  print(paste(num,"is Odd"))\n}\n}\n\nodd_or_even(4)"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/R/Prime-Numbers.R","content":"prime_numbers <- function(n) {\n  if (n >= 2) {\n    x = seq(2, n)\n    prime_nums = c()\n    for (i in seq(2, n)) {\n      if (any(x == i)) {\n        prime_nums = c(prime_nums, i)\n        x = c(x[(x %% i) != 0], i)\n      }\n    }\n    return(prime_nums)\n  }\n  else \n  {\n    stop("Input number should be at least 2.")\n  }\n} \nprime_numbers(12)"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/R/Read-csv-file.R","content":"read_csv_file <- function() {\nmovie_data = read.csv(file="movies.csv", header=TRUE, sep=",")\nprint("Content of the .csv file:")\nprint(movie_data)\n}\n\nread_csv_file()"}
