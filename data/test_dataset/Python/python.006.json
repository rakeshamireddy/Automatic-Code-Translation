{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/add1.py","content":"\ndef add1(num):\n    return (num+1)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/add2nums.py","content":"\ndef add2nums(a, b):\n    return (a+b)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/areaSquare.py","content":"\ndef areaSquare(side):\n    if(side <= 0 ):\n        return (-1)\n    else:\n        return (side*side)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/armstrong.py","content":"\ndef armstrong():\nnum = 6\nsum = 0\ntemp = num\nwhile temp > 0:\n   digit = temp % 10\n   sum = sum + (digit*digit*digit)\n   temp = temp // 10\nif num == sum:\n   print('is an Armstrong number')\nelse:\n   print('is not an Armstrong number')\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/celsius_to_kelvin.py","content":"\ndef celsius_to_kelvin(temp_C):\n    temp_K = temp_C + 273.15\n    return(temp_K)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/Decimal-to-binary.py","content":"\ndef convert_to_binary(n): \n\n      if(n > 1):\n        convert_to_binary(n//2)\n      n = n%2\n      print(n)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/divisibleby10.py","content":"\ndef divisibleby10(n):\n    if(n%10 == 0):\n        return True\n    else:\n        return False\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/Factorial.py","content":"\ndef factorial(n):\n    factorial = 1\n    if(n < 0):\n        print('Sorry, factorial does not exist for negative numbers')\n    elif(n == 0):\n        print('The factorial of 0 is 1')\n    else:\n        for i in range(1,n):\n            factorial = factorial * i\n        print(factorial)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/factors.py","content":"\ndef print_factors(n):\n   n=14\n   for i in range(1, n):\n       if n % i == 0:\n           return i\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/fahrenheit_to_celsius.py","content":"\ndef fahrenheit_to_celsius(temp_F):\n  temp_C = (temp_F - 32) * 5 / 9\n  return(temp_C)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/Fibonacci.py","content":"\ndef fibonacci(n): \n    \n    fibonacci = [None for i in range(n)]\n    fibonacci[0] = fibonacci[1] = 1\n    for i in range(2,n):\n      fibonacci[i] = fibonacci[i - 2] + fibonacci[i - 1]\n    print(fibonacci)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/first_five_elem.py","content":"\ndef first_five_elem():\n  i = 1\n  while i < 6:\n    print(i)\n    i = i+1\n"}	
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/for_stringspy.py","content":"\ndef for_strings():\n    l = ('apples','oranges','grapes','berries','kiwi','nuts')\n    for i in range(0,6):\n        print(l[i])\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/greater_than.py","content":"\ndef greater_than():\n  a = 10\n  b = 2\n  return True if a > b else False\n"}	
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/greatest3.py","content":"\ndef great(x,y,z):\nx = 10\ny = 14\nz = 12\n\nif (x >= y) and (x >= z):\n   return (x)\nelif (y >= x) and (y >= z):\n   return (y)\nelse:\n   return (z)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/hcf.py","content":"\ndef compute_hcf(x, y):\n    if x > y:\n        smaller = y\n    else:\n        smaller = x\n    for i in range(1, smaller+1):\n        if((x % i == 0) and (y % i == 0)):\n            hcf = i \n    return hcf\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/helloworld.py","content":"\ndef helloworld():\n    print('Hello World')\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/integerType.py","content":"\ndef integerType(num):\n    if (num > 0):\n        return 1\n    if(num < 0):\n        return -1\n    if(num == 0):\n        return 0\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/lcm.py","content":"\ndef compute_lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater = greater + 1\n\n   return lcm\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/lengthOfVector.py","content":"\ndef lengthOfVector(vector):\n    count = 0\n    for x in vector:\n        count = count+1 \n    return count\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/log_operations.py","content":"\ndef log_operations():\n  x = [True,False,0,6]\n  y = [False,True,False,True]\n  return(x or y)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/Max-Min-of-Vector.py","content":"\ndef max_min_vector(n):\n    n = [10, 20, 30, 40, 50, 60]\n    print('Original vector:')\n    print(n)   \n    print('Maximum value of the said vector:',max(n))\n    print('Minimum value of the said vector:',min(n))\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/multiples.py","content":"\ndef mult():\n   num = 12\n   for i in range(1, 11):\n      print(num, 'x', i, '=', num*i)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/Odd-or-Even.py","content":"\ndef odd_or_even(n):\n    num = n\n    if((num % 2) == 0):\n        print('even')\n    else:\n        print('odd')\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/palindromey.py","content":"\ndef palindrome(num):\n    temp = num\n    rev = 0\n    while(num > 0):\n        dig = num % 10\n        rev = rev * 10 + dig\n        num = num // 10\n    if(temp == rev):\n        return True\n    else: \n        return False\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/perfect.py","content":"\ndef perfect_number(n):\n    sum = 0\n    for x in range(1, n):\n        if n % x == 0:\n            sum += x\n    return sum\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/Prime-Numbers.py","content":"\ndef prime_numbers(n):\n     prime_nums = [] \n     if (n >= 2):\n        \n        for i in range(2,n):\n             for j in range(2,i):\n                  \n                  if i%j == 0:\n                      break\n             else:\n                 prime_nums.append(i)\n        return(prime_nums)\n     else: \n           print('Input number should be at least 2')\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/prod_of_elem_in_arrays.py","content":"\ndef prod_of_elem_in_arrays():\n    a = list(range(1,11))\n    b = list(range(2,12))\n    return [a[i] * b[i] for i in range(len(a))]\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/sortvector.py","content":"\ndef sortVector(vector):\n    vector.sort()\n    return vector\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/sum_of_elem_in_arrays.py","content":"\ndef sum_of_elem_in_arrays():\n    a = list(range(1,11))\n    b = list(range(2,12))\n    return [a[i] + b[i] for i in range(len(a))]\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/SumOfVector.py","content":"\ndef sum(nums):\n    result = 0\n    for i in nums:\n        result = result + i\n    return (result)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/triangle.py","content":"\ndef triangle(a,b,c):\na = 5\nb = 6\nc = 7\n\ns = (a + b + c) / 2\n\narea = (s*(s-a)*(s-b)*(s-c)) ** 0.5\nreturn(area)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/uppercase.py","content":"\ndef upper_case(word):\n    return word.upper()\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/max_in_an_array.py","content":"\ndef max_in_an_array():\n    x1 = [7, 2, 1, 4, 9, 6, 7, 8, 9]\n    return max(x1)\n"}
{"repo_name":"rakeshamireddy/Automatic-Code-Translation","ref":"refs/heads/master","path":"data/test_dataset/Python/min_in_an_array.py","content":"\ndef min_in_an_array():\n    x1 = [7, 2, 1, 4, 9, 6, 7, 8, 9]\n    return min(x1)\n"}