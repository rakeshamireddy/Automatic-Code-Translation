{"ast":null,"code":"var _jsxFileName = \"/Users/harika/Downloads/Github/Automatic-Code-Translation/Web Application/frontend/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport axios from \"axios\";\nimport { addTranslation } from '../../actions/translation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  addTranslation,\n  auth: {\n    user,\n    loading\n  },\n  history\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    sourceLang: '',\n    targetLang: '',\n    sourceFile: ''\n  });\n  const {\n    sourceLang,\n    targetLang,\n    sourceFile\n  } = formData;\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [translatedContent, setTranslatedContent] = useState(\"empty\"); // for drop downs\n\n  const onChange = e => {\n    console.log(e.target.name);\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log(formData); // if (selectedFile) setFormData({...formData, 'sourceFile':selectedFile.name})\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(selectedFile);\n    if (isFilePicked) console.log(selectedFile.name);\n\n    if (isFilePicked) {\n      setFormData({ ...formData,\n        'sourceFile': selectedFile.name\n      });\n    } // if (selectedFile) setFormData({...formData, 'sourceFile':selectedFile.name})\n\n\n    console.log(formData);\n    addTranslation(formData, history);\n  };\n\n  const changeHandler = event => {\n    console.log(\"inside changeHandler\");\n    setSelectedFile(event.target.files[0]);\n    setIsFilePicked(true);\n    setTranslatedContent(\"not converted\");\n    if (formData.sourceLang) console.log(formData.sourceLang);\n    if (formData.targetLang) console.log(formData.targetLang); // setFormData ({...formData,'sourceFile':selectedFile.name})\n    // setFormData({ ...formData, ['sourceFile']:selectedFile})\n    //console.log (selectedFile,isFilePicked)\n  };\n\n  const handleTranslateClick = event => {\n    event.preventDefault();\n    console.log(\"inside handleTranslateClick\");\n\n    if (selectedFile) {\n      console.log(\"selected file is, \", selectedFile.name);\n      const res = axios.post('/api/uploadFile', selectedFile.name, {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        }\n      }).then(response => {\n        //alert(\"file upload complete\");\n        setTranslatedContent(response.data);\n      }); // console.log (response.data)\n    } // var child;\n    // console.log (child)\n    // const exec = require('child_process').exec\n    // console.log (exec)\n    // child = exec ('cat ../../frontend/src/files/public/uploads/'+selectedFile.name,\n    //                     function (error,stdout,stderr) {\n    //                       console.log ('stdout: '+stdout)\n    //                       console.log ('stderr: '+stderr)\n    //                       if (error != null) {\n    //                         console.log (\"exec error: \"+error)\n    //                       }\n    //                       setTranslatedContent(stdout)\n    //                     }\n    // )\n    // child ()\n\n  };\n\n  const handleSubmission = event => {\n    event.preventDefault();\n    console.log(\"inside handleSubmission\");\n    const formData = new FormData();\n    formData.append('File', selectedFile);\n    console.log(\"inside handleSubmission formData content is\", formData.get(\"File\"));\n    uploadFile(formData);\n  }; // removed async from async (formData), await from await axios\n\n\n  const uploadFile = async formData => {\n    console.log(\"inside upload file\");\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      } // 'Accept': 'application/json',\n      // \"content-type\": \"application/json\" },\n\n    };\n    console.log(\"inside uploadFile formData content is\", formData.get(\"File\")); // removed await that was before axios in the next lines //JSON.stringify(\n    // const res = axios.post('/api/uploadFile',formData,config).then(\n    //             (response) => \n    //               {alert(\"file upload complete\");\n    //               console.log('reponse is ',response);\n    //             })\n  };\n\n  return loading && user === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 37\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Automatic Code Translation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 28\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_2columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"large text-center text-primary\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-file-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-center\",\n            children: \" Choose your source language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [' ', /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"sourceLang\",\n              className: \"btn btn-light\",\n              value: sourceLang,\n              onChange: e => onChange(e),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose one..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Python\",\n                children: \"Python\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Java\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"C++\",\n                children: \"C++\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"R\",\n                children: \"R\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-center\",\n            children: \"Upload Your Source File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"choose-file\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: changeHandler,\n                  name: \"sourceFile\",\n                  val: sourceFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 17\n                }, this), isFilePicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Filename: \", selectedFile.name, \" Selected\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 96\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmission,\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \" Upload file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"large text-center text-primary\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-exchange-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-center\",\n            children: \" Choose your target language for conversion \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [' ', /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"targetLang\",\n              className: \"btn btn-light\",\n              value: targetLang,\n              onChange: e => onChange(e),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose one..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Python\",\n                children: \"Python\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Java\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"C++\",\n                children: \"C++\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"R\",\n                children: \"R\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            value: \"Submit\",\n            children: \" Translate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Translated Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: translatedContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 50\n  }, this);\n};\n\n_s(Dashboard, \"uoLt+BRCLQwFfZI8MgHNQX8hb74=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  addTranslation: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addTranslation\n})(withRouter(Dashboard));\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/harika/Downloads/Github/Automatic-Code-Translation/Web Application/frontend/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","useState","Link","withRouter","PropTypes","connect","Spinner","axios","addTranslation","Dashboard","auth","user","loading","history","formData","setFormData","sourceLang","targetLang","sourceFile","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","translatedContent","setTranslatedContent","onChange","e","console","log","target","name","value","onSubmit","preventDefault","changeHandler","event","files","handleTranslateClick","res","post","headers","then","response","data","handleSubmission","FormData","append","get","uploadFile","config","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react'\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport axios from \"axios\"\nimport {addTranslation} from '../../actions/translation'\n\nconst Dashboard = ({addTranslation, auth: {user, loading}, history}) => {\n  const [formData, setFormData] = useState ({\n    sourceLang:'',\n    targetLang:'',\n    sourceFile:''\n  })\n\n  const {\n    sourceLang,\n    targetLang,\n    sourceFile,\n  } = formData;\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [translatedContent, setTranslatedContent] = useState(\"empty\");\n\n  // for drop downs\n  const onChange = e =>{\n    console.log (e.target.name)\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    console.log (formData)\n    // if (selectedFile) setFormData({...formData, 'sourceFile':selectedFile.name})\n  }\n   \n  \n  const onSubmit = e => {\n    e.preventDefault();\n    console.log (selectedFile)\n    if (isFilePicked) console.log (selectedFile.name)\n    if (isFilePicked) {\n    setFormData ({...formData,'sourceFile':selectedFile.name})\n    }\n    // if (selectedFile) setFormData({...formData, 'sourceFile':selectedFile.name})\n    console.log (formData)\n    addTranslation(formData, history)\n  }\n\n  const changeHandler = (event) => {\n    console.log (\"inside changeHandler\")\n    setSelectedFile(event.target.files[0]);\n    setIsFilePicked(true);\n    setTranslatedContent(\"not converted\")\n    if (formData.sourceLang) console.log (formData.sourceLang)\n    if (formData.targetLang) console.log (formData.targetLang)    \n    // setFormData ({...formData,'sourceFile':selectedFile.name})\n    // setFormData({ ...formData, ['sourceFile']:selectedFile})\n    //console.log (selectedFile,isFilePicked)\n  }\n\n  const handleTranslateClick = (event) => {\n    event.preventDefault();\n    console.log (\"inside handleTranslateClick\")\n    if (selectedFile) {\n      console.log (\"selected file is, \",selectedFile.name)\n      const res = axios.post('/api/uploadFile',selectedFile.name,{headers: {\"Content-Type\": \"text/plain\"}}).then(\n                (response) => \n                  { //alert(\"file upload complete\");\n                  setTranslatedContent(response.data);\n                })\n      // console.log (response.data)\n    }\n    // var child;\n    // console.log (child)\n    // const exec = require('child_process').exec\n    // console.log (exec)\n    // child = exec ('cat ../../frontend/src/files/public/uploads/'+selectedFile.name,\n    //                     function (error,stdout,stderr) {\n    //                       console.log ('stdout: '+stdout)\n    //                       console.log ('stderr: '+stderr)\n    //                       if (error != null) {\n    //                         console.log (\"exec error: \"+error)\n    //                       }\n    //                       setTranslatedContent(stdout)\n    //                     }\n    // )\n    // child ()\n  }\n\n  const handleSubmission = (event) => {\n    event.preventDefault();\n    console.log (\"inside handleSubmission\")\n    const formData = new FormData ();\n    formData.append('File',selectedFile)\n    console.log (\"inside handleSubmission formData content is\", formData.get(\"File\"))\n    uploadFile(formData)\n  }\n  // removed async from async (formData), await from await axios\n  const uploadFile = async (formData) => {\n    console.log (\"inside upload file\")\n    const config = {\n      headers: { \n        'Content-Type': 'application/json'},\n        // 'Accept': 'application/json',\n        // \"content-type\": \"application/json\" },\n    };\n    console.log (\"inside uploadFile formData content is\", formData.get(\"File\"))\n    // removed await that was before axios in the next lines //JSON.stringify(\n    // const res = axios.post('/api/uploadFile',formData,config).then(\n    //             (response) => \n    //               {alert(\"file upload complete\");\n    //               console.log('reponse is ',response);\n    //             })\n  }\n\n\n  return loading && user === null ? <Spinner/> : <Fragment>\n    <h1 className='large text-primary'>Automatic Code Translation</h1>\n    <p className = \"lead\"> <i className=\"fas fa-user\"></i> Welcome {user && user.name}</p>\n    <br/>\n    <br/>\n    {/* <div className = \"container\"> */}\n    <form onSubmit={e=> onSubmit(e)}>\n      <div className = \"container_2columns\">\n        <div className = \"column1\">\n          <p className=\"large text-center text-primary\"><i className = \"fas fa-file-alt\"></i></p>\n          <p className = \"lead text-center\"> Choose your source language</p>\n          {/* <br/>\n          <br/> */}\n          <div>\n            {/* <label for=\"sourceLang\">Choose source language</label> */}\n            {' '}\n            <select name=\"sourceLang\" className=\"btn btn-light\"\n                value={sourceLang}\n                onChange={e => onChange(e)}>\n                <option>Choose one..</option>\n                <option value=\"Python\">Python</option>\n                <option value=\"Java\">Java</option>\n                <option value=\"C++\">C++</option>\n                <option value=\"R\">R</option>\n            </select>\n          </div>\n          <p className = \"lead text-center\">Upload Your Source File</p>\n          {/* </form> */}\n            \n            {/* <br/>\n            <br/> */}\n          <form className=\"text-center\">\n            <div>\n              {/* className = \"file-field input-field\" */}\n              <div className=\"choose-file\">\n                  {/* className = \"btn #64b5f6 blue darken-1\" */}\n                    {/* <span> Upload program file</span>  */}\n                <input type = \"file\" onChange={changeHandler} name=\"sourceFile\" val={sourceFile}></input>\n                {isFilePicked ? ( <div> <p>Filename: {selectedFile.name} Selected</p></div>): (<p>Select File</p>)}\n              </div>\n            </div>\n              <br/>\n            <button onClick={handleSubmission} type = \"submit\" className = \"btn btn-primary\"> Upload file</button>\n          </form>\n        </div>\n        <div className = \"column2\">\n          <p className=\"large text-center text-primary\"><i className = \"fas fa-exchange-alt\"></i></p>\n          <p className = \"lead text-center\"> Choose your target language for conversion </p>\n          {/* <br/>\n          <br/> */}\n          <div>\n            {/* <label for=\"targetLang\">Choose source language</label> */}\n            {' '}\n            <select name=\"targetLang\" className=\"btn btn-light\"\n                value={targetLang}\n                onChange={e => onChange(e)}>\n                <option>Choose one..</option>\n                <option value=\"Python\">Python</option>\n                <option value=\"Java\">Java</option>\n                <option value=\"C++\">C++</option>\n                <option value=\"R\">R</option>\n            </select>\n          </div>\n          <button type = \"submit\" className = \"btn btn-primary\" value=\"Submit\"> Translate</button>\n          {/* <button onClick={handleTranslateClick}type = \"submit\" className = \"btn btn-primary\" value=\"Submit\"> Translate</button> */}\n          <p>Translated Content</p>\n          <p>{translatedContent}</p>\n        </div>\n      </div>\n    {/* </div> */}\n    </form>\n\n  </Fragment>\n}\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  addTranslation: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {addTranslation})(withRouter(Dashboard))\n"]},"metadata":{},"sourceType":"module"}